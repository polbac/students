{"ast":null,"code":"import { createConnection } from 'typeorm';\nimport { Country } from '../database/entity/Country';\nimport(\"reflect-metadata\");\n\nrequire('dotenv').config();\n\nlet connection;\nexport function makeConnection() {\n  return new Promise(async (resolve, reject) => {\n    try {\n      connection = await createConnection({\n        type: process.env.DB_TYPE,\n        host: process.env.DB_HOST,\n        port: process.env.DB_PORT,\n        username: process.env.DB_USERNAME,\n        password: process.env.DB_PASSWORD,\n        database: process.env.DB_DATABASE,\n        entities: [Country]\n      });\n      resolve();\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\nexport default (() => connection);","map":{"version":3,"sources":["/Users/TROCAUSER/dev/students/connection/index.ts"],"names":["createConnection","Country","require","config","connection","makeConnection","Promise","resolve","reject","type","process","env","DB_TYPE","host","DB_HOST","port","DB_PORT","username","DB_USERNAME","password","DB_PASSWORD","database","DB_DATABASE","entities","err"],"mappings":"AAAA,SAASA,gBAAT,QAAgE,SAAhE;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,OAAQ,kBAAR;;AAEAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,IAAIC,UAAJ;AAEA,OAAO,SAASC,cAAT,GAA0B;AAC7B,SAAO,IAAIC,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC1C,QAAI;AACAJ,MAAAA,UAAU,GAAG,MAAMJ,gBAAgB,CAAC;AAChCS,QAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,OADc;AAEhCC,QAAAA,IAAI,EAAEH,OAAO,CAACC,GAAR,CAAYG,OAFc;AAGhCC,QAAAA,IAAI,EAAEL,OAAO,CAACC,GAAR,CAAYK,OAHc;AAIhCC,QAAAA,QAAQ,EAAEP,OAAO,CAACC,GAAR,CAAYO,WAJU;AAKhCC,QAAAA,QAAQ,EAAET,OAAO,CAACC,GAAR,CAAYS,WALU;AAMhCC,QAAAA,QAAQ,EAAEX,OAAO,CAACC,GAAR,CAAYW,WANU;AAOhCC,QAAAA,QAAQ,EAAE,CAAEtB,OAAF;AAPsB,OAAD,CAAnC;AASAM,MAAAA,OAAO;AACV,KAXD,CAWE,OAAMiB,GAAN,EAAW;AACThB,MAAAA,MAAM,CAACgB,GAAD,CAAN;AACH;AACJ,GAfM,CAAP;AAgBH;AAED,gBAAe,MAAkBpB,UAAjC","sourcesContent":["import { createConnection, ConnectionOptions, Connection } from 'typeorm'\nimport { Country } from '../database/entity/Country'\nimport (\"reflect-metadata\")\n\nrequire('dotenv').config()\n\nlet connection: Connection;\n\nexport function makeConnection() {\n    return new Promise(async (resolve, reject) => {\n        try {\n            connection = await createConnection({\n                type: process.env.DB_TYPE,\n                host: process.env.DB_HOST,\n                port: process.env.DB_PORT,\n                username: process.env.DB_USERNAME,\n                password: process.env.DB_PASSWORD,\n                database: process.env.DB_DATABASE,\n                entities: [ Country ],\n            } as ConnectionOptions)\n            resolve()\n        } catch(err) {\n            reject(err)\n        }\n    })\n}\n\nexport default (): Connection => connection "]},"metadata":{},"sourceType":"module"}