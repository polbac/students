{"ast":null,"code":"var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2, _temp;\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\nimport { Entity, PrimaryGeneratedColumn, Column } from \"typeorm\";\nimport 'reflect-metadata';\nexport let Country = (_dec = Entity(), _dec2 = PrimaryGeneratedColumn(), _dec3 = Column('name'), _dec(_class = (_class2 = (_temp = class Country {\n  constructor() {\n    _initializerDefineProperty(this, \"id\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"name\", _descriptor2, this);\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"id\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"name\", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class2)) || _class);","map":{"version":3,"sources":["/Users/TROCAUSER/dev/students/database/entity/Country.ts"],"names":["Entity","PrimaryGeneratedColumn","Column","Country"],"mappings":";;;;;;;;AAAA,SAAQA,MAAR,EAAgBC,sBAAhB,EAAwCC,MAAxC,QAAqD,SAArD;AACA,OAAO,kBAAP;AAGA,WAAaC,OAAb,WADCH,MAAM,EACP,UACKC,sBAAsB,EAD3B,UAIKC,MAAM,CAAC,MAAD,CAJX,oCADA,MACaC,OADb,CACqB;AAAA;AAAA;;AAAA;AAAA;;AAAA,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {Entity, PrimaryGeneratedColumn, Column} from \"typeorm\";\nimport 'reflect-metadata'\n\n@Entity()\nexport class Country {\n    @PrimaryGeneratedColumn()\n    id: number\n\n    @Column('name')\n    name: string\n}"]},"metadata":{},"sourceType":"module"}