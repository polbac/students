{"ast":null,"code":"import * as Yup from 'yup';\nimport useLocale from '../hooks/locale';\nconst {\n  paymentMethodForm: {\n    form\n  }\n} = useLocale();\nconst PaymentMethodSchema = Yup.object().shape({\n  name: Yup.string().min(2, form.name.error).max(50, form.name.error).required(form.name.error),\n  career: Yup.string().required(form.email.error),\n  birthdate: Yup.date().required(form.birthdate.error),\n  country: Yup.string().required(form.country.error),\n  city: Yup.string().required(form.city.error),\n  phone: Yup.string().required(form.phone.error),\n  email: Yup.string().email('Invalid email').required(form.email.error)\n});\nexport { PaymentMethodSchema };","map":{"version":3,"sources":["/Users/TROCAUSER/dev/students/schemas/paymentMethod.js"],"names":["Yup","useLocale","paymentMethodForm","form","PaymentMethodSchema","object","shape","name","string","min","error","max","required","career","email","birthdate","date","country","city","phone"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,MAAM;AAAEC,EAAAA,iBAAiB,EAAE;AAAEC,IAAAA;AAAF;AAArB,IAAkCF,SAAS,EAAjD;AAEA,MAAMG,mBAAmB,GAAGJ,GAAG,CAACK,MAAJ,GAAaC,KAAb,CAAmB;AAC3CC,EAAAA,IAAI,EAAEP,GAAG,CAACQ,MAAJ,GACDC,GADC,CACG,CADH,EACMN,IAAI,CAACI,IAAL,CAAUG,KADhB,EAEDC,GAFC,CAEG,EAFH,EAEOR,IAAI,CAACI,IAAL,CAAUG,KAFjB,EAGDE,QAHC,CAGQT,IAAI,CAACI,IAAL,CAAUG,KAHlB,CADqC;AAK3CG,EAAAA,MAAM,EAAEb,GAAG,CAACQ,MAAJ,GACHI,QADG,CACMT,IAAI,CAACW,KAAL,CAAWJ,KADjB,CALmC;AAO3CK,EAAAA,SAAS,EAAEf,GAAG,CAACgB,IAAJ,GACNJ,QADM,CACGT,IAAI,CAACY,SAAL,CAAeL,KADlB,CAPgC;AAS3CO,EAAAA,OAAO,EAAEjB,GAAG,CAACQ,MAAJ,GACJI,QADI,CACKT,IAAI,CAACc,OAAL,CAAaP,KADlB,CATkC;AAW3CQ,EAAAA,IAAI,EAAElB,GAAG,CAACQ,MAAJ,GACDI,QADC,CACQT,IAAI,CAACe,IAAL,CAAUR,KADlB,CAXqC;AAa3CS,EAAAA,KAAK,EAAEnB,GAAG,CAACQ,MAAJ,GACFI,QADE,CACOT,IAAI,CAACgB,KAAL,CAAWT,KADlB,CAboC;AAe3CI,EAAAA,KAAK,EAAEd,GAAG,CAACQ,MAAJ,GACFM,KADE,CACI,eADJ,EAEFF,QAFE,CAEOT,IAAI,CAACW,KAAL,CAAWJ,KAFlB;AAfoC,CAAnB,CAA5B;AAoBA,SAASN,mBAAT","sourcesContent":["import * as Yup from 'yup';\nimport useLocale from '../hooks/locale'\n\nconst { paymentMethodForm: { form } } = useLocale()\n\nconst PaymentMethodSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(2, form.name.error)\n        .max(50, form.name.error)\n        .required(form.name.error),\n    career: Yup.string()\n        .required(form.email.error),\n    birthdate: Yup.date()\n        .required(form.birthdate.error),\n    country: Yup.string()\n        .required(form.country.error),\n    city: Yup.string()\n        .required(form.city.error),\n    phone: Yup.string()\n        .required(form.phone.error),\n    email: Yup.string()\n        .email('Invalid email')\n        .required(form.email.error),\n})\n\nexport { PaymentMethodSchema }"]},"metadata":{},"sourceType":"module"}